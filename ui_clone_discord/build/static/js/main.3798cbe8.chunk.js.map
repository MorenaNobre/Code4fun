{"version":3,"sources":["assets/logo-rocketseat.svg","components/Layout/styles.ts","components/ServerButton/styles.ts","components/ServerButton/index.tsx","components/ServerList/styles.ts","components/ServerList/index.tsx","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/styles.ts","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/styles.ts","components/ChannelData/index.tsx","components/Layout/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["module","exports","Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Logo","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Category","AddCategoryIcon","Add","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Role","User","UserRow","nickname","isBot","UserList","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","Array","from","keys","map","n","key","type","placeholder","Layout","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3798cbe8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-rocketseat.3fbf5a84.svg\";","import styled from \"styled-components\";\r\n\r\n// SL - Server List\r\n// SN - Server Name\r\n// CI - Channel Info (*2)\r\n// CL - Channel List\r\n// CD - Channel Data\r\n// UL - User List\r\n// UI - User Info\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 71px 240px auto 240px;\r\n  grid-template-rows: 46px auto 52px;\r\n  grid-template-areas: \r\n   'SL SN CI CI'\r\n   'SL CL CD UL'\r\n   'SL UI CD UL';\r\n  height: 100vh;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { Props } from '.';\r\n\r\nexport const Button = styled.button<Props>`\r\n    display: flex;\r\n    align-items: center; \r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n    width: 48px;\r\n    height: 48px;\r\n    margin-bottom: 8px;\r\n    background-color: ${props => \r\n        props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\r\n    position: relative;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    > img {\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n\r\n    &::before {\r\n        width: 9px;\r\n        height: 9px;\r\n\r\n        position: absolute;\r\n        left: -17px;\r\n        top: calc(50% - 4.5px);\r\n\r\n        background-color: var(--white);\r\n        border-radius: 50%;\r\n\r\n        content: '';\r\n        display: ${(props) => (props.hasNotifications ? 'inline' : 'none')};\r\n    }\r\n\r\n    &::after {\r\n        background-color: var(--notification);\r\n        width: auto;\r\n        height: 16px;\r\n        padding: 0 4px;\r\n        position: absolute;\r\n        bottom: -4px;\r\n        right: -4px;\r\n        border-radius: 12px;\r\n        border: 4px solid var(--quaternary);\r\n        text-align: right;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        color: var(--white);\r\n        content: '${(props) => props.mentions && props.mentions}';\r\n        display: ${(props) =>\r\n            props.mentions && props.mentions > 0 ? 'inline' : 'none'}\r\n    }\r\n\r\n    transition: border-radius .2s, background-color .2s;\r\n\r\n    &.active, &:hover{\r\n        border-radius: 16px;\r\n        background-color: ${props => props.isHome ? 'var(--rocketseat)' : 'var(--discord)'}\r\n    }\r\n`;","import React from 'react'\r\n\r\nimport Logo from '../../assets/logo-rocketseat.svg'\r\n\r\nimport { Button } from './styles'\r\n\r\nexport interface Props {\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n    hasNotifications?: boolean;\r\n    mentions?: number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n    selected,\r\n    isHome,\r\n    hasNotifications,\r\n    mentions\r\n}) => {\r\n    return (\r\n        <Button\r\n            isHome={isHome}\r\n            hasNotifications={hasNotifications}\r\n            mentions={mentions}\r\n            className={selected ? 'active' : ''}\r\n        >\r\n            {isHome && <img src={Logo} alt=\"Rocketseat\"/>}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ServerButton","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: SL;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: var(--tertiary);\r\n    padding: 11px 0;\r\n    max-height: 100vh;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar{\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n    width: 32px;\r\n    border-bottom: 2px solid var(--quaternary);\r\n    margin-bottom: 8px;\r\n`;\r\n","import React from 'react'\r\n\r\nimport ServerButton from '../ServerButton'\r\n\r\nimport { Container, Separator } from './styles'\r\n\r\nconst ServerList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <ServerButton isHome />\r\n\r\n            <Separator />\r\n\r\n            < ServerButton/>\r\n            < ServerButton hasNotifications />\r\n            < ServerButton mentions={3}/>\r\n            < ServerButton/>\r\n            < ServerButton/>\r\n            < ServerButton hasNotifications/>\r\n            < ServerButton/>\r\n            < ServerButton/>\r\n            < ServerButton hasNotifications/>\r\n            < ServerButton/>\r\n            < ServerButton mentions={7}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ServerList","import styled from \"styled-components\";\r\nimport {ExpandMore} from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 11px 0 16px;\r\n  background-color: var(--secondary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n  width: 28px;\r\n  height: 28px;\r\n  color: var(--white);\r\n`;","import React from 'react';\r\n\r\nimport { Container, Title, ExpandIcon } from './styles';\r\n\r\nconst ServerName: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Title>Servidor da Moguis</Title>\r\n\r\n            <ExpandIcon />\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ServerName;","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CI;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 17px;\r\n  background-color: var(--primary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  width:24px;\r\n  height: 24px;\r\n  color: var(--symbol);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-left: 9px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  height: 24px;\r\n  width: 1px;\r\n  background-color: var(--white);\r\n  opacity: 0.2;\r\n  margin: 0 13px;\r\n`;\r\n\r\nexport const Description = styled.span`\r\n  font-size: 15px;\r\n  color: var(--gray)\r\n`;","import React from 'react';\r\n\r\nimport { \r\n    Container, \r\n    HashtagIcon, \r\n    Title, \r\n    Separator, \r\n    Description } from './styles';\r\n\r\nconst ChannelInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <HashtagIcon />\r\n\r\n            <Title>chat-livre</Title>\r\n\r\n            <Separator />\r\n\r\n            <Description>Canal aberto para conversas</Description>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelInfo;","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline'\r\nimport { PersonAdd, Settings } from 'styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  padding: 5px 3px;\r\n  border-radius: 5px;\r\n  background-color: transparent;\r\n  transition: .2s;\r\n\r\n  > div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  > div span{\r\n    margin-left: 5px;\r\n    color: var(--senary);\r\n  }\r\n\r\n  &:hover, &.active {\r\n    background-color: var(--quinary);\r\n\r\n    > div span{\r\n      color: var(--white)\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--symbol);\r\n`;\r\n\r\nexport const InviteIcon = styled(PersonAdd)`\r\n  width: 16px;\r\n  height: 16px;\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n  transition: color .2s;\r\n\r\n  &:hover {\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 16px;\r\n  height: 16px;\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n  transition: color .2s;\r\n  margin-left: 4px;\r\n\r\n  &:hover {\r\n    color: var(--white);\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\r\n\r\nexport interface Props {\r\n    channelName: string;\r\n    selected?: boolean;    \r\n}\r\n\r\nconst ChannelButton: React.FC<Props> = ({\r\n    channelName,\r\n    selected\r\n}) => {\r\n    return (\r\n        <Container className={selected? 'active' : ''}>\r\n            <div>\r\n                <HashtagIcon />\r\n                <span>{channelName}</span>\r\n            </div>\r\n\r\n            <div>\r\n                <InviteIcon />\r\n                <SettingsIcon />\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelButton;","import styled from 'styled-components';\r\nimport { Add } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CL;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px 9.5px 0 16px;\r\n  background-color: var(--secondary);\r\n`;\r\n\r\nexport const Category = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 6px;\r\n\r\n  > span {\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: var(--gray);\r\n  }\r\n`;\r\n\r\nexport const AddCategoryIcon = styled(Add)`\r\n  width: 21px;\r\n  height: 21px;\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\n\r\nimport ChannelButton from '../ChannelButton'\r\n\r\nimport { Container, Category, AddCategoryIcon } from './styles';\r\n// import { Category } from 'styled-icons/material';\r\n\r\nconst ChannelList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Category>\r\n                <span>Canais de texto</span>\r\n                <AddCategoryIcon />\r\n            </Category>\r\n\r\n            <ChannelButton channelName=\"chat-livre\" />\r\n            <ChannelButton channelName=\"trabalho\" />\r\n            <ChannelButton channelName=\"lolzinho\" />\r\n            <ChannelButton channelName=\"csgo\" />\r\n            <ChannelButton channelName=\"valorant\" />\r\n            \r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelList;","import styled from \"styled-components\";\r\nimport { Mic, Headset, Settings } from 'styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n  grid-area: UI;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background-color: var(--quaternary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-color: var(--gray)\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  margin-left: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  > strong {\r\n    font-size: 13px;\r\n    color: var(--white);\r\n    display: block;\r\n  }\r\n\r\n  > span {\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > svg:not(:first-child){\r\n    margin-left: 7px;\r\n  }\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: opacity 0.2s;\r\n  &:hover{\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\nexport const HeadphoneIcon = styled(Headset)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: opacity 0.2s;\r\n  &:hover{\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: opacity 0.2s;\r\n  &:hover{\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\n\r\nimport { Container, Profile, Avatar, UserData, Icons, MicIcon, HeadphoneIcon, SettingsIcon } from './styles';\r\n\r\nconst UserInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Profile>\r\n                <Avatar />            \r\n                <UserData>\r\n                    <strong>Morena Nobre</strong>\r\n                    <span>#3891</span>\r\n                </UserData>\r\n            </Profile>\r\n\r\n            <Icons>\r\n                <MicIcon />\r\n                <HeadphoneIcon />\r\n                <SettingsIcon />\r\n            </Icons>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default UserInfo;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UL;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3px 6px 0 16px;\r\n    background-color: var(--secondary);\r\n    max-height: calc(100vh - 46px);\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track{\r\n        background-color: var(--secondary)\r\n    }\r\n`;\r\n\r\nexport const Role = styled.span`\r\n    margin-top: 20px;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: var(--gray);\r\n`;\r\n\r\nexport const User = styled.div`\r\n    margin-top: 5px;\r\n    padding: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    background: transparent;\r\n    transition: background 0.2s;\r\n    &:hover{\r\n        background: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    > strong {\r\n        margin-left: 13px;\r\n        font-weight: 500;\r\n        color: var(--white);\r\n        opacity: 0.7;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n    }\r\n\r\n    > span{\r\n        margin-left: 9px;\r\n        background-color: var(--discord);\r\n        color: var(--white);\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n`;\r\n\r\nexport const Avatar= styled.div`\r\n flex-shrink: 0;\r\n width: 32px;\r\n height: 32px;\r\n border-radius: 50%;\r\n background-color: var(--primary);\r\n &.bot{\r\n     background-color: var(--mention-detail);\r\n }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, Role, User, Avatar } from './styles';\r\n\r\ninterface UserProps {\r\n    nickname: string;\r\n    isBot?: boolean;\r\n}\r\n\r\n//criar componente secundário neste arquivo mesmo:\r\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot }) => {\r\n    return (\r\n        <User>\r\n            <Avatar className={isBot ? 'bot' : ''}/>\r\n\r\n            <strong>{nickname}</strong>\r\n\r\n            {isBot && <span>Droid</span>}\r\n        </User>\r\n    )\r\n}\r\n\r\nconst UserList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n\r\n            <Role>Disponível - 1</Role>\r\n            <UserRow nickname=\"Morena - Moguis - Grisa Nobre\" />\r\n\r\n            <Role>Offline - 18</Role>\r\n            <UserRow nickname=\"BB-9E\" isBot />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"C-3PO\" isBot />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"BB-8\" isBot />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"R2-D2\"  isBot />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n            <UserRow nickname=\"Fulano\"  />\r\n\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default UserList;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 4px 16px;\r\n  margin-right: 4px;\r\n  background-color: transparent;\r\n  &.mention{\r\n    background-color: var(--mention-message);\r\n    border-left: 2px solid var(--mention-detail);\r\n    padding-left: 14px;\r\n  }\r\n  & + div{\r\n    margin-top: 13px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: var(--secondary);\r\n  border-radius: 50%;\r\n  &.bot{\r\n    background-color: var(--mention-detail);\r\n  }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  min-height: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-left: 17px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > strong{\r\n    color: var(--white);\r\n    font-size: 16px;\r\n  }\r\n  > span{\r\n    margin-left: 6px;\r\n    background-color: var(--discord);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n    padding: 4px 5px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n  }\r\n  > time{\r\n    margin-left: 6px;\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-align: left;\r\n  font-size: 16px;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Mention = styled.span`\r\n  color: var(--link);\r\n  cursor: pointer;\r\n  &:hover{\r\n    text-decoration: underline;\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport { Container, Avatar, Message, Header, Content } from './styles';\r\nexport { Mention } from './styles';\r\n\r\nexport interface Props {\r\n    author: string;\r\n    date: string;\r\n    content: string | React.ReactElement | React.ReactNode;\r\n    hasMention?: boolean;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n    author,\r\n    date,\r\n    content,\r\n    hasMention,\r\n    isBot\r\n}) => {\r\n    return (\r\n        <Container className={hasMention ?  'mention' : ''}>\r\n            <Avatar className={isBot ?  'bot' : ''} />\r\n\r\n            <Message>\r\n                <Header>\r\n\r\n                    <strong>{author}</strong>\r\n\r\n                    {isBot && <span>Droid</span>}\r\n\r\n                    <time>{date}</time>\r\n\r\n                </Header>\r\n                <Content>{content}</Content>\r\n            </Message>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelMessage;","import styled from \"styled-components\";\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CD;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  background-color: var(--primary);\r\n`;\r\n\r\nexport const Messages = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: calc(100vh - 46px - 68px);\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar{\r\n    width: 8px;\r\n  }\r\n  ::-webkit-scrollbar-thumb{\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n\r\n  }\r\n  ::-webkit-scrollbar-track{\r\n    background-color: var(--secondary);\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 44px;\r\n  padding: 0 10px 0 57px;\r\n  border-radius: 7px;\r\n  color: var(--white);\r\n  background-color: var(--chat-input);\r\n  position: relative;\r\n  &::placeholder{\r\n    color: var(--gray);\r\n  }\r\n  ~ svg{\r\n    position: relative;\r\n    top: -50%;\r\n    left: 14px;\r\n    transition: 180ms ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n  width: 24px;\r\n  height: 24px;\r\n  color: var(--gray);\r\n`;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport ChannelMessage, { Mention } from '../ChannelMessage';\r\n\r\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\r\n\r\nconst ChannelData: React.FC = () => {\r\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n    useEffect(() => {\r\n        const div = messagesRef.current;\r\n\r\n        if(div) {\r\n            div.scrollTop = div.scrollHeight;\r\n        }\r\n    }, [messagesRef]);\r\n\r\n    return (\r\n        <Container>\r\n            <Messages ref={messagesRef}>\r\n                {Array.from(Array(10).keys()).map((n) =>(\r\n                    <ChannelMessage\r\n                    key={n}\r\n                    author=\"Morena Nobre\"\r\n                    date=\"28/06/2020\"\r\n                    content=\"Hoje é domingão e eu estou desenvolvendo a UI do Discord. Pura diversão!\"\r\n                />\r\n                ))}\r\n                \r\n                <ChannelMessage\r\n                    author=\"Droid BB-8\"\r\n                    date=\"28/06/2020\"\r\n                    content={\r\n                        <>\r\n                            <Mention>@Morena Nobre</Mention>, beep beep boop buzz beep zaz buzz boopy-de-doo!\r\n                        </>\r\n                    }\r\n                    hasMention\r\n                    isBot\r\n                />\r\n            </Messages>\r\n\r\n            <InputWrapper>\r\n                <Input type=\"text\" placeholder=\"Conversar em #chat-livre\" />\r\n                <InputIcon />\r\n            </InputWrapper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelData;","import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport ServerList from '../ServerList'\r\nimport ServerName from '../ServerName'\r\nimport ChannelInfo from '../ChannelInfo'\r\nimport ChannelList from '../ChannelList'\r\nimport UserInfo from '../UserInfo'\r\nimport UserList from '../UserList'\r\nimport ChannelData from '../ChannelData';\r\n\r\n// export default function Layout() { //JS\r\n//     return(\r\n//         <div>Oi mundo!</div>\r\n//     )\r\n// }\r\n\r\n// same as above with typescript\r\n\r\nconst Layout: React.FC = () => {\r\n    return (\r\n        <Grid>\r\n            <ServerList />\r\n            <ServerName />\r\n            <ChannelInfo />\r\n            <ChannelList />\r\n            <UserInfo />\r\n            <ChannelData />\r\n            <UserList />\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Layout;","import  { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n    }\r\n\r\n    *, button, input {\r\n        border: 0;\r\n        outline: 0;\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n\r\n    :root {\r\n        --primary: #36393f;\r\n        --secondary: #2f3136;\r\n        --tertiary: rgb(32,34,37);\r\n        --quaternary: #292b2f;\r\n        --quinary: #393d42;\r\n        --senary: #828386;\r\n       \r\n        --white: #fff;\r\n        --gray: #8a8c90;\r\n        --chat-input: rgb(64,68,75);\r\n        --symbol: #74777a;\r\n     \r\n        --notification: #f84a4b;\r\n        --discord: #6e86d6;\r\n        --mention-detail: #f9a839;\r\n        --mention-message: #413f3f;\r\n     \r\n        --link: #5d80d6;\r\n     \r\n        --rocketseat: #7159c1;\r\n      }\r\n`;","import React from 'react';\n\nimport Layout from './components/Layout'\nimport GlobalStyles from './styles/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}